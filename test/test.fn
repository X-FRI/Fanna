#| The MIT License (MIT)
#| 
#| Copyright (c) 2022 Muqiu Han
#| 
#| Permission is hereby granted, free of charge, to any person obtaining a copy
#| of this software and associated documentation files (the "Software"), to deal
#| in the Software without restriction, including without limitation the rights
#| to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#| copies of the Software, and to permit persons to whom the Software is
#| furnished to do so, subject to the following conditions:
#| 
#| The above copyright notice and this permission notice shall be included in all
#| copies or substantial portions of the Software.
#| 
#| THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#| IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#| FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#| AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#| LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#| OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#| SOFTWARE.

module test
import std

Hello := lambda ->
    (io.Writeln "Hello World!")
;;


Factorial := lambda n ->
    cond n in
        | (or (equal n 0) (equal n 1)) -> 
            return 1;
        | default -> 
            return (* n (Factorial (min n 1)));
    end
;;

Test_Hello := lambda ->
    (Hello)
;;

Test_Factorial := lambda ->
    loop n := 0 until (= n 16) do
        (io.Writeln n "! = " (Factorial n));
    end
;;

Main := lambda args ->
    (io.Writeln "Test Hello...")
    (Test_Hello)

    (io.Writeln "Test Factorial...")
    (Test_Factorial)
;;